# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Set up java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      # Runs a set of commands using the runners shell
      - name: build
        run: mvn install

  publish-image:
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Set up java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: build
        run: mvn install

      - name: Build docker image
        run: docker build -t webapp .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "ap-southeast-1"

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Publish docker image to ECR
        run: |
          docker tag webapp:latest 120341968249.dkr.ecr.ap-southeast-1.amazonaws.com/tian-repo:latest
          docker push 120341968249.dkr.ecr.ap-southeast-1.amazonaws.com/tian-repo:latest


#      - name: Install ssh-key
#        run: |
#          mkdir -p ~/.ssh
#          echo "${{secrets.SSH_KEY}}" > ~/.ssh/chenchentian.pem
#          chmod 600 ~/.ssh/chenchentian.pem
#          eval "$(ssh-agent -s)"
#          ssh-add ~/.ssh/chenchentian.pem
#          ssh-keyscan -H "${{ secrets.TARGET_SERVER }}" >> ~/.ssh/known_hosts

#      - name: copy
#        run: |
#          cd target
#          rsync -e "ssh -i ~/.ssh/chenchentian.pem" -v docker-compose.yaml ${{ secrets.USER }}@${{ secrets.TARGET_SERVER }}:~/.ssh
#
#      - name: deploy
#        run: |
#          cd ~/.ssh
#          chmod 600  chenchentian.pem
#          ssh  -i "chenchentian.pem" ${{secrets.USER}}@${{secrets.TARGET_SERVER}} "
#               cd ~/.ssh;
#               chmod 600 docker-compose.yaml;
#               docker compose up -d
#          "
#
#      - name: Delete ssh-key
#        run: rm ~/.ssh/chenchentian.pem
